{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Python Bottle Post Route": {
        "prefix": "api",
        "body": [
			"from bottle import post, request, response",
			"",
			"##############################",
            "@post(\"/${1:route}\")",
            "def _():",
            "\ttry:",
			"\t\t# validation",
            "\t\tdb = x.db()",
            "\t\tdb.commit()",
            "\t\treturn {\"info\":\"ok\"}",
            "\texcept Exception as e:",
            "\t\tprint(e)",
            "\t\tif \"db\" in locals(): db.rollback()",
			"\t\ttry: # Controlled exception, usually comming from the x file",
			"\t\t\tresponse.status = e.args[0]",
			"\t\t\treturn {\"info\":e.args[1]}",
			"\t\texcept: # Something unknown went wrong",
			"\t\t\tif \"users.user_email\" in str(e):", 
			"\t\t\t\tresponse.status = 400", 
			"\t\t\t\treturn {\"info\":\"user_email already exists\"}",			
			"\t\t\t# unknown exception",
			"\t\t\tresponse.status = 500",
			"\t\t\treturn {\"info\":str(e)}",			
            "\tfinally:",
            "\t\tif \"db\" in locals(): db.close()"
        ],
        "description": "Creating a bottle route with a try-except clause, database rollback and database close statement"
    },	
}